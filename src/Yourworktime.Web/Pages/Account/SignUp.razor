@page "/account/signup"
@using Yourworktime.Web.Models
@using Yourworktime.Core;
@inject NavigationManager navigationManager
@inject AuthService authService

<div class="form">
	<h2 class="title">Sign Up</h2>

	<EditForm Model="@signUpModel" OnValidSubmit="@RegisterUser">
		<DataAnnotationsValidator />

		<div class="form-group">
			<label class="label">First Name</label>
			<InputText id="fname" class="form-control" type="text" @bind-Value="@signUpModel.FirstName"></InputText>
			<ValidationMessage For="@(() => signUpModel.FirstName)" />
		</div>
		<div class="form-group">
			<label class="label">Last Name</label>
			<InputText id="lname" class="form-control" type="text" @bind-Value="@signUpModel.LastName"></InputText>
			<ValidationMessage For="@(() => signUpModel.LastName)" />
		</div>

		<div class="form-group">
			<label class="label">E-mail</label>
			<InputText id="email" class="form-control" type="email" @bind-Value="@signUpModel.Email" @onkeyup="@(_ => OnEmailChanged())"></InputText>
			<ValidationMessage For="@(() => signUpModel.Email)" />
		</div>
		<div class="form-group">
			<label class="label">Password</label>
			<InputText id="password" class="form-control" type="password" @bind-Value="@signUpModel.Password"></InputText>
			<ValidationMessage For="@(() => signUpModel.Password)" />
		</div>
		<div class="form-group">
			<label class="label">Confirm Password</label>
			<InputText id="password" class="form-control" type="password" @bind-Value="@signUpModel.ConfirmPassword"></InputText>
			<ValidationMessage For="@(() => signUpModel.ConfirmPassword)" />
		</div>

		<div class="form-group">
			<div class="form-check">
				<input type="checkbox" class="form-check-input" @bind-value="@signUpModel.AgreeToTerms">
				<label class="label">I agree to the <a href="/termsofuse">Term of Use</a></label>
			</div>
			<ValidationMessage For="@(() => signUpModel.AgreeToTerms)" />
		</div>

		<div class="field" style="margin-bottom: 1em;">
			<div class="control">
				<button type="submit" class="btn btn-filled-light-blue btn-block">Sign Up</button>
			</div>
		</div>

		@if (showSignUpError)
		{
			<div class="alert alert-danger">
				An account with this E-mail already exists
			</div>
		}

		<div class="text-center">
			<p>Already have an account? <a href="/account/signin">Sign In</a></p>
		</div>
	</EditForm>
</div>

<div class="text-center">
	<p>Your data is safe with us: <a href="/security">Security</a> <a href="/privacy">Privacy</a></p>
</div>

@code {
	private SignUpModel signUpModel = new SignUpModel();
	private bool showSignUpError = false;
	private string signUpErrorMessage;

	private async Task RegisterUser()
	{
		var result = await authService.SingUp(signUpModel);

		if (result.Successful)
		{
			showSignUpError = false;
			navigationManager.NavigateTo("/accounts/signin");
		}
		else
		{
			showSignUpError = true;
			signUpErrorMessage = string.Join('\n', result.Errors);
		}
	}

	private void OnEmailChanged()
	{
		if (showSignUpError)
			showSignUpError = false;
	}
}
